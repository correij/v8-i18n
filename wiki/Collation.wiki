= Introduction =
Sorting strings is a complex, locale sensitive operation.

== Settings ==
Collator constructor accepts optional locale array and optional settings object.<br>
Settings object and valid values for all the keys:
{{{
usage: {'sort', 'search'}
sensitivity: {'base', 'accent', 'case', 'variant'}
ignorePunctuation: {true, false}
}}}

Other collation properties can be passed using Unicode extensions:
{{{
Key    Property            Type       Values
kn     numeric             "boolean"  true/false
kk     normalization       "boolean"  true/false
kf     caseFirst           "string"   "upper", "lower", "false"
}}}

== Default locale ==
Default locale is set to *navigator.language* if it's supported by Chrome, or to *und*.<br>
The safest approach is to specify target locale and check if it was available through resolvedOptions property.

== Default settings ==
{{{
usage: 'sort'
ignorePunctuation: false
sensitivity: 'variant' // For usage:'sort', it's locale dependent for usage:'search'
}}}

== Setting locale info ==
It is more efficient to create a global LocaleList object and use it
when constructing the Collator (or any other service). It avoids re-validation of locales in the list.
{{{
var localeList = v8Intl.LocaleList(['sr-rs', 'de-u-co-phonebk'])
// Result is well formed and canonicalized: ['sr-RS', 'de-u-co-phonebk'] 
}}}

== Collator with default locale and settings ==
{{{
var array = ['d', 'a', 'b', 'c'];
var coll = v8Intl.Collator();
array.sort(coll.compare);
}}}

== Collator with user locale and default settings ==
{{{
var array = ['d', 'a', 'b', 'c'];
var coll = v8Intl.Collator(localeList);
array.sort(coll.compare);
}}}

== Collator with user locale and settings ==
{{{
var array = ['d', 'a', 'b', 'c'];
// Create collator sensitive to difference in base letters, a != b,
// and to accents, a != รก.
var coll = v8Intl.Collator(localeList, {sensitivity:'accent'});
array.sort(coll.compare);
}}}

== Collator with user locale and Unicode extension ==
{{{
var array = ['d', 'a', 'b', 'c'];
// Turn on numeric sort so '1' sorts before '12'.
var coll = v8Intl.Collator(['sr-u-kn-true']);
array.sort(coll.compare);
}}}